//first create the needed certificates using "Cygwin" or something similar like "MinGW" or "MSYS2"
//**************************************************************************************************************************//
//openssl genrsa -out registry-ca.key 4096
//openssl req -x509 -new -nodes -key registry-ca.key -sha256 -days 3650 -out registry-ca.pem -subj "/CN=docker-registry-ca" //
//**************************************************************************************************************************//

** IMPORTANT: There are two possibilities: 1. Use the ca.crt and ca.key out of "Users\name\.minikube" for the signing step
					   2. Use the lines above and copy the registry-ca.pem to "Users\name\.minikube\certs"

openssl req -new -newkey rsa:4096 -nodes -keyout cert.key -out cert.csr -subj "/CN=docker-registry" -addext "subjectAltName=DNS:localhost,IP:127.0.0.1,IP:10.0.2.2"
openssl x509 -req -CA registry-ca.pem -CAkey registry-ca.key -CAcreateserial -in cert.csr -out cert.cer -days 3650 -extfile <(printf "subjectAltName=DNS:localhost,IP:127.0.0.1,IP:10.0.2.2\nbasicConstraints=critical,CA:TRUE\nextendedKeyUsage = serverAuth\nsubjectKeyIdentifier=hash")

openssl x509 -in cert.cer -text -noout

** copy the files "cert.cer" and "cert.key" to docker-minikube\registry\certs
** Notice the "-extfile < (printf ...)" is added to the signing command and not to the .csr creation command.

-- the following ist executetd with the windows cmd
-- change the directory to "docker-minikube\registry"

** first approach: docker composer
docker-compose up -d

	(**the build comand works with docker-compose_sec.yml and is for educational purposes. It invokes the "Dockerfile" and build the image
	docker-compose build)

** second approach: plain docker. Just for educational purposes :)
docker build . -t nginx-proxy -f ./Dockerfile
docker run -d -p 5000:443 --link registry:registry --name nginx-registry-proxy nginx-proxy

docker run -d --name registry -v /tmp:/var/lib/registry -e "SETTINGS_FLAVOR=local" -e "STORAGE_PATH=/registry" registry


-- in case evrything works fine the registry is reachable at
https://localhost:5000/v2/_catalog


-- change the directory to "docker-minikube\TestApp"
docker build -t docker01 -f ./Dockerfile .
docker tag docker01 localhost:5000/docker01
docker push localhost:5000/docker01

-- follow this https://superuser.com/questions/363036/how-to-map-an-ip-adress-to-localhost instruction, use the IP: 10.0.2.2


-- run minikube on virtualbox
minikube start --driver=virtualbox --no-vtx-check

kubectl create deployment test-app --image=10.0.2.2:5000/docker01
kubectl expose deployment test-app --type=LoadBalancer --port=8090

-- test the deployment
minikube service test-app --url
http://<ip>:<port>/restAPI/test/execute

-- or open the gate
minikube tunnel
kubectl get services
http://<external-ip>:8090/restAPI/test/execute


curl -X GET https://localhost:5000/v2/_catalog
